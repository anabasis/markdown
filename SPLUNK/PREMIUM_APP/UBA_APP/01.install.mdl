# UBA Install


## Introduction

About Splunk User Behavior Analytics and release types
The following types of Splunk UBA releases are available:

Platform releases
Maintenance and patch releases
Platform releases
Platform releases contain significant new features and enhancements such as new or enhanced rules, threats, or product functionality. Platform releases are identified with a zero at the end of the three-digit release number (for example, 4.3.0).

Platform releases are installed by performing the following tasks:

Downloading the software from the Splunk UBA Software Update page on Splunkbase.
Deploy the software into a new environment, or upgrade existing software by following the upgrade instructions.
You can also obtain the platform release software for Bare Metal environments from the Splunk UBA RHEL 7.x Software for Bare Metal Installation page on Splunkbase.

Maintenance and patch releases
Maintenance releases contain a longer list of known issues, bug fixes, and minor feature additions or enhancements. Maintenance releases are identified by a three-digit release number that does not end in a zero such as 4.3.1, which is a maintenance release for the platform release 4.3.0.

A patch release consists of up to five critical or highly urgent issues that must be addressed in a short window of time. Patch releases are identified by a four-digit release number such as 4.3.1.1, which is a patch release for Splunk UBA release 4.3.1.

Maintenance and patch releases are installed by performing the following tasks:

Download the software from the Splunk UBA Software Update page on Splunkbase.
Install the software using the CLI to execute a script.

How to install or upgrade to this release of Splunk UBA
Splunk UBA 5.0.4.1 is a maintenance release containing fixed issues. Refer to the Fixed Issues in Splunk UBA in the Splunk User Behavior Analytics Release Notes for a summary of this information.

Install or upgrade to this release of Splunk UBA
Refer to the table for information about how to install or upgrade to this release of Splunk UBA.

Splunk UBA 5.0.0 requires files from the Splunk UBA 5.0.4 installation package in order to complete the installation on RHEL 7.8. If your upgrade or installation path requires you to install Splunk UBA 5.0.0 on RHEL 7.8, follow the installation instructions carefully and make sure you do not skip the steps to obtain and extract files from the Splunk UBA 5.0.4 installation package.

Your current deployment	How to get Splunk UBA 5.0.4.1
You are running Splunk UBA 5.0.0 or later.	
Upgrade to Splunk UBA 5.0.4.
See Upgrade Splunk UBA prerequisites in The Splunk UBA 5.0.4 documentation for instructions.
Upgrade to Splunk UBA 5.0.4.1.
See Upgrade Splunk UBA prerequisites and overview for instructions.
You are running Splunk UBA version earlier than 5.0.0.	
Upgrade to Splunk UBA 5.0.0.
See Upgrade Splunk UBA prerequisites in the Splunk UBA 5.0.0 documentation for instructions.
Upgrade to Splunk UBA 5.0.4.
See Upgrade Splunk UBA prerequisites in the release 5.0.4 documentation for instructions.
Upgrade to Splunk UBA 5.0.4.1.
See Upgrade Splunk UBA prerequisites and overview for instructions.
You are deploying Splunk UBA for the first time	
Install Splunk UBA 5.0.0. Follow the instructions in the Splunk UBA installation checklist in the Splunk UBA 5.0.0 documentation.
Upgrade to Splunk UBA 5.0.4.
See Upgrade Splunk UBA prerequisites in The Splunk UBA 5.0.4 documentation for instructions.
Upgrade to Splunk UBA 5.0.4.1.
See Upgrade Splunk UBA prerequisites and overview for instructions.
Splunk UBA upgrade and install path summary
The following table summarizes the installation and upgrade path required for Splunk UBA releases. For example:

To upgrade to 5.0.4.1 from 5.0.2 on RHEL, you must first upgrade to 5.0.4, then upgrade to 5.0.4.1.
If you are installing Splunk UBA for the first time on RHEL, you must first install 5.0.0, then upgrade to 5.0.4, then upgrade to 5.0.4.1.
Refer to the installation and upgrade documentation for each release to find instructions.

Splunk UBA Release	Type of Release	Date Released	Upgrade Path	Install Path
5.0.4.1	Patch	February 16, 2021	Upgrade from 5.0.4	
On RHEL, OEL, and CentOS systems:

Install 5.0.0
Upgrade to 5.0.4
Upgrade to 5.0.4.1
On AMI or OVA systems:

Install 5.0.3
Upgrade to 5.0.4
Upgrade to 5.0.4.1
5.0.4	Maintenance	October 21, 2020	Upgrade from 5.0.0 or later	
On RHEL, OEL, and CentOS systems:

Install 5.0.0
Upgrade to 5.0.4
On AMI or OVA systems:

Install 5.0.3
Upgrade to 5.0.4
5.0.3	Maintenance	April 2, 2020	
RHEL, OEL, and CentOS require 5.0.1 and the 5.0.3.1 installer
AMI or OVA systems can install release 5.0.3 directly
On RHEL, OEL, and CentOS systems:
Install 5.0.0
Upgrade to 5.0.1, and optionally to 5.0.2
Upgrade to 5.0.3
On AMI or OVA systems, you can install 5.0.3 directly.

5.0.2	Content	February 12, 2020	Upgrade from 5.0.1	
Install 5.0.0
Upgrade to 5.0.1
Upgrade to 5.0.2
5.0.1	Maintenance	January 22, 2020	Upgrade from 5.0.0	
Install 5.0.0
Upgrade to 5.0.1
5.0.0	Platform	October 17, 2019	Upgrade from 4.3.1 or later	You can install this version of Splunk UBA directly.
4.3.4	Content	September 11, 2019	Upgrade from 4.3.1.1	
Install 4.3.0
Upgrade to 4.3.1, and optionally to 4.3.2 or 4.3.3
Upgrade to 4.3.1.1
Upgrade to 4.3.4
4.3.1.1	Patch	August 29, 2019	Upgrade from 4.3.1	
Install 4.3.0
Upgrade to 4.3.1
Upgrade to 4.3.1.1
4.3.3	Content	August 8, 2019	Upgrade from 4.3.1 or 4.3.2	
Install 4.3.0
Upgrade to 4.3.1, and optionally to 4.3.2
Upgrade to 4.3.3
4.3.2	Content	June 17, 2019	Upgrade from 4.3.1	
Install 4.3.0
Upgrade to 4.3.1
Upgrade to 4.3.2
4.3.1	Maintenance	June 3, 2019	Upgrade from 4.3.0	Install 4.3.0, then upgrade to 4.3.1
4.3.0	Platform	March 26, 2019	Upgrade from 4.2.1.1. Do not upgrade to release 4.3.0 without assistance from Splunk UB Professional Services.	You can install this version of Splunk UBA directly.

Splunk UBA installation checklist
Install Splunk UBA with assistance from Splunk Professional Services.

Checklist of tasks to install Splunk UBA
Use this checklist if you are a new Splunk UBA customer installing a Splunk UBA platform release for the first time. See About Splunk User Behavior Analytics and release types for information about how to determine if your Splunk UBA release is a platform release.

If you are an existing customer and want to upgrade to a more recent version of Splunk UBA, see How to install or upgrade to this release of Splunk UBA for upgrade instructions.

Perform all tasks in the table in the order that they are listed.

Number	Task	Description	Documentation
1	Review known issues	Review the known issues reported in this Splunk UBA release.	See Known issues in Splunk UBA.
2	Verify sizing	You can install Splunk UBA in a single-server deployment or in a distributed deployment. All servers must meet the system requirements. Verify that the planned architecture of the system meets the requirements for the desired EPS and number of accounts, devices, and data sources.	See Plan and scale your Splunk UBA deployment.
3	Verify hardware requirements	Verify hardware requirements such as the minimum IOPS of the storage subsystem, and the disk space and RAM on all nodes.	See Hardware requirements.
4	Verify operating system requirements	Verify that your system is running a supported operating system. Automatic OS updating must be turned off on all nodes.	See Operating system requirements.
5	Verify permissions	Verify that you are able to log in to each node and that root account permissions exist.	See User access requirements.
6	Verify networking requirements	Verify networking requirements such as node connectivity, port availability, IP address assignments, and DNS configuration.	See Networking requirements.
7	Configure host name lookup and DNS	Configure the host name lookup and DNS settings in your environment so that all Splunk UBA nodes can communicate with each other.	See Configure host name lookup and DNS.
8	Verify Splunk platform user account requirements	A properly configured Splunk user account is required to send data from the Splunk platform to Splunk UBA.	See Requirements for connecting to and getting data from the Splunk platform.
9	Install Splunk UBA	Perform any remaining platform-specific tasks that are needed, and then download and install the Splunk UBA software and perform the installation.
Splunk UBA 5.0.0 requires files from the Splunk UBA 5.0.4 installation package in order to complete the installation on RHEL 7.8. If you upgrade or installation path requires you to install Splunk UBA 5.0.0 on RHEL 7.8, follow the installation instructions carefully and make sure you do not skip the steps to obtain and extract files from the Splunk UBA 5.0.4 installation package.

See Install Splunk User Behavior Analytics.
10	Verify the installation	Open a supported web browser and log in to the public IP address with admin credentials to confirm a successful installation.	See Verify successful installation.
Next steps after installing Splunk UBA
Perform the tasks summarized in the table after Splunk UBA is successfully installed.

Number	Task	Description	Documentation
1	Secure the default account	Change the password for the default admin account, and optionally restrict sudo access.	See Secure the default account after installing Splunk UBA.
2	Configure Splunk UBA	Perform additional tasks to configure Splunk UBA:	
Perform the tasks in Configure Splunk UBA.
Upload a license file. See License Splunk UBA.
Manage your Splunk UBA certificates. See Request and add a new certificate to Splunk UBA to access the Splunk UBA web interface.
3	Administer Splunk UBA	Administer user accounts and monitor the health of your deployment.	
Configure user accounts and authentication. See Manage user accounts and account roles in Splunk UBA in the Administer Splunk User Behavior Analytics manual.
Verify that Splunk UBA is running normally. See Monitor the health of your Splunk UBA deployment in the Administer Splunk User Behavior Analytics manual.
4	Add data to Splunk UBA	After Splunk UBA is installed and configured, add human resources (HR) data and assets data from the Splunk platform as your first data sources.	See Which data sources do I need? in the Get Data into Splunk User Behavior Analytics manual.


Plan and scale your Splunk UBA deployment
Install Splunk UBA in a single-server or distributed deployment architecture. A distributed deployment helps you scale your Splunk UBA installation.

Scaling your deployment
A distributed Splunk UBA deployment scales horizontally with streaming and batch servers. Because the nodes in a distributed Splunk UBA deployment perform a high number of computations among them and require fast network connections, do not deploy Splunk UBA across different geographical locations. If you have multiple sites, configure a duplicate Splunk UBA cluster as a warm standby system. See Configure warm standby in Splunk UBA in the Administer Splunk User Behavior Analytics manual.

Use the parameters below to guide you in properly sizing your Splunk UBA deployment. Exceeding the limits will have a negative impact on performance and can result in events being dropped and not processed.

The Max events per second capacity represents the peak events rate processed by Splunk UBA when ingesting data from Splunk Enterprise.
The Max Number of accounts represents the total number of accounts monitored by Splunk UBA, such as user, admin, system, or service accounts.
The Max Number of devices represents the total number of devices monitored by Splunk UBA.
The Max number of data sources represents the total number of data source connectors configured on Splunk UBA to ingest data from Splunk Enterprise.
Size of cluster	Max events per second capacity	Max Number of accounts	Max Number of devices	Max number of data sources
1 node	4K	up to 50K	up to 100K	6
3 nodes	12K	up to 50K	up to 200K	10
5 nodes	20K	up to 200K	up to 300K	12
7 nodes	28K	up to 350K	up to 500K	24
10 nodes	40K-45K	up to 350K	up to 500K	32
20 nodes	75K-80K	up to 750K	up to 1 Million	64
Engage Splunk engineering if the requirements for your environment exceed the limits listed in the table above.

Below is an example of how to determine the proper deployment for a particular environment:

Use the following tstats query on Splunk Enterprise. This query obtains the EPS statistics for the last 30 days.
| tstats count as eps where index=* earliest=-30d@d groupby index, sourcetype _time span=1s 
| stats count as NumSeconds max(eps) perc99(eps) perc90(eps) avg(eps) 
  as avg_eps by index, sourcetype 
| addinfo 
| eval PercentageOfTimeWithData = NumSeconds / (info_max_time - info_min_time) 
| fields - NumSeconds info* 
| eval EffectiveAverage = avg_eps * PercentageOfTimeWithData 
| fieldformat PercentageOfTimeWithData = round(PercentageOfTimeWithData*100,2) . "%"

Export the results to a CSV file. See Export search results in the Splunk Enterprise Search Manual for options and instructions.
Using a spreadsheet program such as Microsoft Excel, open the CSV file and remove all rows that have data sources that will not be ingested into Splunk UBA. See Which data sources do I need? in the Get Data into Splunk User Behavior Analytics manual to determine the data sources you need to configure. The data sources you need will vary depending on your environment and the content you want to see in Splunk UBA.
Get a total of the EPS in the 99% and 90% columns. Base your sizing requirements on the 99% column to get the added benefit of providing a cushion of extra nodes.
This screen image shows a spreadsheet with the output of a tstats command. The relevant items are described in the text immediately following this image.
This example has a total EPS in the 99% column over 5,000 and fewer than 10 data sources, meaning that a 3-node deployment is sufficient.

Splunk UBA deployment architecture
To scale Splunk UBA in a distributed deployment, Splunk UBA assigns each physical server, or node, in a cluster to a specific task. Each node then has specific services installed to support that task. The specific services installed on each node can vary depending on the size of your cluster. For example, in a 7-node deployment, Spark services are installed on node 7 only, while Hadoop services are installed on all nodes except for node 3.

See Monitor the health of your Splunk UBA deployment in Administer Splunk User Behavior Analytics for more information about each type of service.
See Where services run in Splunk UBA in Administer Splunk User Behavior Analytics for more information about finding where services are running in your Splunk UBA deployment.
In a single-node deployment, all services provided by the streaming and batch servers exist on the same node.

All nodes in your Splunk UBA deployment must meet the System requirements for Splunk UBA.

This image shows an example architecture diagram of a distributed Splunk UBA deployment. There are three layers in the image. The top layer shows a Splunk UBA management server and Splunk UBA nodes. The second later shows a streaming server and a batch server. The last layer shows multiple streaming processes under the streaming server, and multiple batch processes under the batch server.

Server	Description
Management server	The management server hosts the Splunk UBA web interface. You only need one management server.

Typical services installed on this server include the UI server, job manager master, InfluxDB server, PostgreSQL, Impala, and Zookeeper Quorum.

Streaming server	Streaming servers are logical servers consisting of a collection of related streaming processes. A streaming server can exist on any single Splunk UBA node or across multiple nodes.

Streaming servers handle the data processing tasks for streaming models in Splunk UBA such as Web Beaconing Detection Model, Network Transport Model, Land Speed Violation Model, and Unusual Windows Events Sequences Model. Streaming servers analyze ingested data in real time and determine the impact of those events over a short time window, such as the past hour. Based on this analysis, streaming servers can produce a multitude of items in Splunk UBA, such as anomalies, indicators of compromise (IoCs), or analytics data.


Typical services installed on streaming servers include Kafka, Docker, Kubernetes, Zookeeper, and Redis. In Splunk UBA, select System > Models and click Streaming Models to view a complete list of available streaming models.

Batch server	Batch servers are logical servers consisting of a collection of related batch processes. A batch server can exist on any single Splunk UBA node or across multiple nodes.

Batch servers handle the data processing tasks for batch models in Splunk UBA. Some anomaly batch models include Unusual Volume of Authentication Events per User Model, Network Scanning Detection Model, and Suspicious Privilege Escalation Model. Some threat batch models include Lateral Movement Threat Model and Threat Computation Task (for detecting threats from anomalies). Batch servers analyze ingested data over a larger time window, such as the last 24 hours, typically running overnight due to the need to process a large amount of data. All threat models in Splunk UBA run as batch models, taking into account the aggregation of data in Splunk UBA including the data cataloged by the streaming servers. Batch servers produce threats and anomalies in Splunk UBA.


Typical services installed on batch servers include Apache Spark and HDFS. In Splunk UBA, select System > Models and click Batch Models to view a complete list of available batch models.


System requirements for Splunk UBA
Install Splunk UBA with assistance from Splunk Professional Services.

Hardware requirements
You can install Splunk UBA on a physical server, a virtual machine, or in the cloud.

Install Splunk UBA on its own hardware stack. Do not install Splunk UBA on the same machines as Splunk Enterprise.

Verify the following hardware requirements before installing Splunk UBA:

Disk space and memory requirements for installing Splunk UBA.
(Optional) Plan for configuring Splunk UBA warm standby.
(Optional) Add additional disks for offline Splunk UBA backups.
Supported AWS server instance types.
Disk subsystem IOPS requirements.
Network interface requirements.
Directories created or modified on the disk.
Disk space and memory requirements for installing Splunk UBA
Every machine in your Splunk UBA deployment must meet the following requirements. Not all machines in your deployment need to have matching specifications, but they must all meet the minimum requirements.

16 dedicated CPU cores. If a machine has more than 16 cores, the additional cores are not used by Splunk UBA.
64GB dedicated RAM. If a machine has more than 64GB RAM, the additional RAM is used by Splunk UBA as needed.
Disk 1 - 100GB dedicated disk space for the Splunk UBA installation.
Disk 2 - 1TB additional dedicated disk space for metadata storage.
Disk 3 - 1TB additional dedicated disk space for each node running Spark services.
See Where services run in Splunk UBA in Administer Splunk User Behavior Analytics for more information about how to determine where Splunk UBA services are running in your deployment. See Directories created or modified on the disk for more information about Splunk UBA directories and space requirements.

For AMI and OVA installations, do not manually mount the disks before installing Splunk UBA. During the installation procedure, the add-disk command will properly mount the disks for you.

The following table summarizes the disk requirements per deployment.

Splunk UBA Deployment	Nodes Requiring 100GB Disk Space for Splunk UBA	Nodes Requiring a 1TB Disk such as /var/vcap for Metadata Storage	Nodes Requiring a 1TB Disk such as /var/vcap2 for Spark Services
1 Node	Node 1	Node 1	Node 1
3 Nodes	All Nodes	All Nodes	Nodes 1, 3
5 Nodes	All Nodes	All Nodes	Nodes 1, 4, 5
7 Nodes	All Nodes	All Nodes	Node 7
10 Nodes	All Nodes	All Nodes	Nodes 9, 10
20 Nodes	All Nodes	All Nodes	Nodes 17, 18, 19, 20
(Optional) Plan for configuring Splunk UBA warm standby
Configure warm standby in your deployment for high availability and disaster recovery. Allocate additional servers for a warm standby solution, where you can manually failover Splunk UBA to a full backup system. The backup system must have the same number of nodes as the active system. See Configure warm standby in Splunk UBA in Administer Splunk User Behavior Analytics.

(Optional) Add additional disks for offline Splunk UBA backups
Use the backup and restore scripts located in /opt/caspida/bin/utils to migrate your Splunk UBA deployment to the next larger size on the same operating system. For example, you can migrate from 5 nodes to 7 nodes, or 10 nodes to 20 nodes. If you want to migrate from 7 nodes to 20 nodes, migrate from 7 nodes to 10 nodes first, then from 10 nodes to 20 nodes.

Add an additional disk to the Splunk UBA management node mounted as /var/vcap/ubabackup for the Splunk UBA backups used to restore Splunk UBA during the migration process.

The size of the additional disk must follow these guidelines:

The disk size must be at least half the size of your deployment in terabytes. For example, a 10-node system requires a 5TB disk.
If you are creating archives, allow for an additional 50 percent of the backup disk size. For example, a 10-node system requires a 5TB disk for backups, and an additional 2.5TB if for archives, so you would need a 7.5TB disk for archived backups.
The table summarizes the minimum disk size requirements for Splunk UBA backups per deployment:

Number of Splunk UBA Nodes	Minimum Disk Size for Backup (without archives)	Minimum Disk Size for Backup (with archives)
1 Node	1TB	1.5TB
3 Nodes	1TB	1.5TB
5 Nodes	2TB	3TB
7 Nodes	4TB	6TB
10 Nodes	5TB	7.5TB
20 Nodes	10TB	15TB
If you have previous backups on the same disk, be sure to also take this into account when determining available disk space. See Migrate Splunk UBA using the backup and restore scripts in Administer Splunk User Behavior Analytics.

Supported AWS server instance types
If you run Splunk UBA on an Amazon Web Services (AWS) instance:

AWS measures CPU power on Elastic Compute Cloud (EC2) instances in virtual CPUs (vCPUs), not real CPUs.
Each vCPU is a hyper thread of an Intel Xeon core on most AWS instance types. See Amazon EC2 Instance Types on the AWS website.
As a hyper thread of a core, a vCPU acts as a core, but the physical core must schedule its workload among other workloads of other vCPUs that the physical core handles.
Installation of Splunk UBA on AWS servers is supported on the following instance types:

m4.4xlarge
m5.4xlarge
m5a.4xlarge
m5.8xlarge
All Splunk UBA nodes in your AWS environment must use io1 volumes for storage.

Disk subsystem IOPS requirements
For all new Splunk UBA deployments, the disk subsystem for each Splunk UBA server must support an average Input/Output Operations per second (IOPS) of 1200 IOPS. Existing deployments on 800 IOPS servers can be upgraded without having to upgrade the disks.

IOPS are a measurement of how much data throughput a hard drive can sustain. Because a hard drive reads and writes at different speeds, there are IOPS numbers for disk reads and writes. The average IOPS is the average between those two figures. See Disk subsystem in the Capacity Planning Manual for Splunk Enterprise for more about IOPS.

Use the following search on your Splunk search head to view the current IOPS on your Splunk UBA server. Replace <hostname> with the hostname of your Splunk UBA server.

index=os sourcetype=<hostname> | timechart span=1m avg(rReq_PS) by host

Network interface requirements
Splunk UBA requires at least one 1Gb ethernet interface on each node.

It is recommended that each Splunk UBA node is configured with at least one control plane interface and one data place interface. Configure the control plane interfaces on one subnet, and the data plane interfaces on a separate subnet.

It is recommended that all interfaces on the data plane network be connected with at least one 10GbE or better ethernet interface. For larger clusters, use 25GbE, 40GbE or 50GbE network interfaces.

Directories created or modified on the disk
Splunk UBA creates or modifies the following directories on the disk during installation.

Directory	Disk	Description of Contents	Updated During Upgrade?	Recommended Space
/home/caspida	Disk 1	Contains the Splunk UBA installation and upgrade .tgz files.	Yes	20 GB
/opt/caspida	Disk 1	Contains the Splunk UBA software.	Yes	20 GB
/opt/splunk	Disk 1	Contains the Splunk forwarder to send data to the Splunk platform.	Yes	10 GB
/etc/caspida/local/conf	Disk 1	Contains custom configuration files affecting your local environment.	No	1 GB
/var/vcap	Disk 2	Contains the following notable sub-directories:
/var/vcap/packages - Contains Spark and Spark configuration files.
/var/vcap/sys/run - Contains files used by some Splunk UBA processes during initial startup.
/var/vcap/sys/log - Contains Splunk UBA log files.
/var/vcap/sys/tmp - Contains temporary files for some Splunk UBA processes.
/var/vcap/store - Contains the metadata storage for Splunk UBA services such as Kafka, PostgreSQL, Hadoop, Influxdb, and Redis
Yes	1 TB
/var/vcap2	Disk 3	Contains the runtime data for Spark services.	Yes	1 TB
/var	root disk	Contains various support files required by Splunk UBA. The /var/lib directory must have a minimum of 20 GB.	Yes	50 GB
Operating system requirements
You must install Splunk UBA on a server that uses one of the following operating systems:

Operating System	Kernel Version Tested
Red Hat Enterprise Linux (RHEL) 7.8 Basic Server	Linux-3.10.0-1127.el7.x86_64-x86_64-with-redhat-7.8-Maipo
CentOS 7.8	Linux-3.10.0-1127.el7.x86_64-x86_64-with-centos-7.8.2003-Core
Oracle Enterprise Linux (OEL) 7.7	Linux-4.14.35-1902.300.11.el7uek.x86_64-x86_64-with-oracle-7.7
Red Hat Enterprise Linux (RHEL) 7.7 Basic Server	Linux-3.10.0-1062.12.1.el7.x86_64-x86_64-with-redhat-7.7-Maipo
CentOS 7.7	Linux-3.10.0-1062.4.3.el7.x86_64-x86_64-with-centos-7.7.1908-Core
Ubuntu 16.04.3 LTS	Linux-4.4.0-176-generic-x86_64-with-Ubuntu-16.04-xenial
Perform bare metal installations on OEL, RHEL, and CentOS systems. Obtain the software from Splunk UBA RHEL 7.x Software for Bare Metal Installation on Splunkbase.

New installations on Ubuntu systems must be performed using an OVA. Obtain the software from Splunk UBA OVA Software on Splunkbase.

Splunk UBA requires that the operating system and underlying component versions match exactly on all nodes in your deployment. Updating the operating system or any components in your deployment can break dependencies that will cause Splunk UBA to stop working and is not recommended. If you must update the operating system before the next release of Splunk UBA, do so in a test environment and verify that everything is working properly before applying the upgrade to your production environment.

Additional RHEL requirements
Make sure your RHEL server has access to the RHEL repositories, and the license includes the following subscription names:

Red Hat Enterprise Linux Server
Red Hat Enterprise Linux Server - Extended Update Support (EUS)
The RHEL EUS subscription enables you to remain with previous stable releases of RHEL for up to approximately 24 months.

Maintaining CLI prompt integrity
Splunk UBA expects the following conditions in your CLI prompts:

The root prompt ends with a # character..
All non-root prompts end with a $ character.
You will see error messages in the resource monitor if you change the ending characters in the CLI prompts.

Applying security patches to your operating system
Always apply the latest security patches for your operating system on all servers in your deployment.

Use the following command to apply all available security patches:

yum update --security -y
Use the following command to upgrade only those packages with security errata:

yum update-minimal --security -y
Do not apply any non-security related patches such as bug fixes or version updates to your operating system to any Splunk UBA servers.

User access requirements
If you are installing Splunk UBA using an OVA or AMI image, perform all tasks as the caspida user and use sudo for tasks requiring root-level privileges.

If you are installing Splunk UBA on a supported Linux platform, you must be able to do the following:

Be able to log in as root, or log in as a different user and use su or sudo to have root privileges. This is required for preparing the servers prior to installing the Splunk UBA software.
Create the caspida user with the appropriate privileges. The caspida user is required to install the Splunk UBA software.
All user and group authentication must be performed locally on each Splunk UBA host. Authenticating users and groups using a centralized controller or user and group management system is not supported.
Networking requirements
Perform the following tasks or verify specific information to meet the networking requirements for installing Splunk UBA:

Assign static IP addresses to Splunk UBA servers
Inbound networking port requirements
Splunk platform port requirements
Modify firewalls and proxies
Assign static IP addresses to Splunk UBA servers
Assign static IP addresses to Splunk UBA servers.

Inbound networking port requirements
Splunk UBA requires certain network ports to be open for other services to interact with Splunk UBA.

Service	Port
SSH	22
HTTPS	443
Syslog or Netcat data sources	10000 and above. One port per data source connector. These ports are only required if you use the legacy Syslog or Netcat data sources to get data from the Splunk platform to Splunk UBA. See Use the legacy Netcat data source to push notable events from Splunk ES to Splunk UBA in the Send and Receive Data from the Splunk Platform manual.
Splunk UBA requires other network ports to be open to allow specific services to interact within a distributed Splunk UBA deployment.

Service	Port
SSH	22
Redis	6379
PostgreSQL	5432
Zookeeper	2181, 2888, 3888
Apache Kafka	9092, 9901, 9093 (for Kafka ingestion), 32768 - 65535 (for JMX)
Job Manager	9002
Time Series Database	8086
Apache Impala	21050
Apache Spark	7077, 8080, 8081
Hadoop Namenode	8020
Hadoop Namenode WebUI	50070
Hadoop Yarn ResourceManager	8090
Hadoop Data Transfer Port	50010
Hadoop Datanodes	50020, 50075
Hadoop Secondary namenode	50090
Hive Metastore	9090, 9095
Kubernetes/etcd	2379, 2380, 5000, 6443, 10250, 10251, 10252, 10255, 30000 - 32767
For more details on services in Splunk UBA, see Monitoring the health of your Splunk UBA deployment in Administer Splunk User Behavior Analytics.

Splunk platform port requirements
The following ports must be open on the Splunk platform to interact with Splunk UBA:

Service	Port
HTTPS authentication	443
HTTP authentication	80
REST services that enable Splunk UBA to communicate with Splunk search heads	8089
Port used to send alerts to Splunk Enterprise Security (ES)	User-defined (for example, 10008)
Ports used to send threats to analysts using email	
Port 587 for STARTTLS
Port 465 for SMTP over SSL
Modify firewalls and proxies
Modify firewalls and proxies to support the inbound and outbound port requirements defined in this document so that requests to internal services do not attempt to travel externally.

Set the no_proxy environment variable for general HTTP communication between nodes.
Set the NO_PROXY environment variable for Splunk UBA's time series database (influxdb). Set NO_PROXY to the same values as no_proxy.
Perform the following tasks to configure your firewall and proxy settings:

If you use an HTTP or HTTPS proxy, exclude localhost and the IP addresses and names of the Splunk UBA servers from the proxy. For example, in a 3-node cluster, add the following configuration to the /etc/environment file:
# Proxy host/port for reference. These variables are not used below. 
PROXY_IP="1.2.3.4"
PROXY_PORT="3128"

# Set the proxy variables based on the values above. Both upper and lower case, different services look for different casing.
HTTP_PROXY="http://1.2.3.4:3128"
http_proxy="http://1.2.3.4:3128"

HTTPS_PROXY="https://1.2.3.4:3128"
https_proxy="https://1.2.3.4:3128"

# Exclude loopback addresses from the proxy
# Note: CIDR ranges aren't supported by older tools so specify both IP and CIDR
#
# Proxy values to be set:
# localhost: "localhost,127.0.0.1,127.0.1.1,127.0.0.0/8"
# UBA Containers: 10.96.0.0/12,10.244.0.0/16,172.17.0.1,172.17.0.2,172.17.0.0/16"
# Site Specific hosts by shortname, fqdn, ip: "ubanode01,ubanode01.mydomain.local,10.10.10.1", ubanode02,ubanode02.mydomain.local,10.10.10.2""

# Set NO_PROXY and no_proxy
NO_PROXY="localhost,127.0.0.1,127.0.1.1,127.0.0.0/8, 10.96.0.0/12,10.244.0.0/16,172.17.0.1,172.17.0.2,172.17.0.0/16, ubanode01,ubanode01.mydomain.local,10.10.10.1, ubanode02,ubanode02.mydomain.local,10.10.10.2, ubanode03,ubanode03.mydomain.local,10.10.10.3"

no_proxy="localhost,127.0.0.1,127.0.1.1,127.0.0.0/8, 10.96.0.0/12,10.244.0.0/16,172.17.0.1,172.17.0.2,172.17.0.0/16, ubanode01,ubanode01.mydomain.local,10.10.10.1, ubanode02,ubanode02.mydomain.local,10.10.10.2, ubanode03,ubanode03.mydomain.local,10.10.10.3"
Use the following commands to stop and restart all Splunk UBA services for the changes in /etc/environment to take effect:
/opt/caspida/bin/Caspida stop-all
/opt/caspida/bin/Caspida start-all
Verify that the nslookup localhost command returns a 127.x.x.x IP address. For example:
$ nslookup localhost
Server:		10.160.20.4
Address:	10.160.20.4#53

Name:	localhost.sv.splunk.com
Address: 127.0.0.1
Configure host name lookups and DNS
Configure your environment so that Splunk UBA can resolve host names properly.

In the /etc/nsswitch.conf file, set the in order in which services are queried for host name lookups. See Configure the name switching service.
In the /etc/resolv.conf file, set the name of your DNS resolver. See Configure the DNS resolver.
Verify that the network interface configuration has a dns-search value configured to match your domain. See Verify the network interface configuration.
In the /etc/hosts file, set the name of all the hosts in your Splunk UBA deployment. See Configure local DNS using the /etc/hosts file.
Verify your name lookup and DNS settings.
Configure the name switching service
The name switching service in Linux environments determines the order in which services are queried for host name lookups. Use cat /etc/nsswitch.conf to verify that your name switching service is using files before DNS. Check the hosts line in the output:

If you see files dns it means that /etc/hosts will be queried before checking DNS.
If you see dns files it means that DNS will be queried before the /etc/hosts file.
Also make sure myhostname is the last item on the hosts line so that the system can determine its own host name from the local config files.

$ cat /etc/nsswitch.conf
# /etc/nsswitch.conf
#
# Example configuration of GNU Name Service Switch functionality.
# If you have the `glibc-doc-reference' and `info' packages installed, try:
# `info libc "Name Service Switch"' for information about this file.

passwd:         compat
group:          compat
shadow:         compat
gshadow:        files

hosts:          files dns myhostname
...
Configure the DNS resolver
Some Splunk UBA services use DNS during installation and while the product is running. All nodes in your Splunk UBA deployment must point to the same DNS server. Verify this is the case in the /etc/resolv.conf file on each node. Use the following command to check if /etc/resolv.conf exists on your system:

ls -lH /etc/resolv.conf
If the file does not exist, create the file by performing the following tasks:

Run the following command:
sudo systemctl enable resolvconf
Restart the server.
Run the ls -lH /etc/resolv.conf command again to verify that the /etc/resolv.conf exists.
Verify the network interface configuration
Verify that the network interface configuration has a dns-search value configured to match your domain, such as mgmt.corp.local. Check the /etc/resolv.conf file to see if search mgmt.corp.local is present so that any shortname lookups for other local nodes are resolved correctly.

On Ubuntu systems, the configuration is located in /etc/network/interfaces as:
dns-search mgmt.corp.local
On CentOS, RHEL, and Oracle Linux systems, the configuration may be located in /etc/sysconfig/network-scripts/ifcfg-eth0 as:
DOMAIN=mgmt.corp.local
More recent CentOS, RHEL, and Oracle Linux systems may use a different slot-based naming scheme. The exact name may vary depending on your specific environment.
Be consistent with your naming conventions and use either all fully qualified domain names (FQDN) such has host.example.com or all short names such as host. Do not use FQDNs in some places and short names in others.

Configure local DNS using the /etc/hosts file
Verify that the /etc/hosts file identifies each node in your Splunk UBA cluster using the following format:

<IP address> <FQDN> <short name> <alias>
In the following example, host spluba01 has an IP address of 192.168.10.1 and its FQDN is spluba01.mgmt.corp.local. Anything after the first three fields is considered an alias and is optional. In the example, ubanode1 identifies node number 1, ubanode2 identifies node number 2, and so on:

192.168.10.1    spluba01.mgmt.corp.local    spluba01    ubanode01
192.168.10.2    spluba02.mgmt.corp.local    spluba02    ubanode02
192.168.10.3    spluba03.mgmt.corp.local    spluba03    ubanode03
192.168.10.4    spluba04.mgmt.corp.local    spluba04    ubanode04
192.168.10.5    spluba05.mgmt.corp.local    spluba05    ubanode05
Formatting your /etc/hosts file this way in conjunction with using files before DNS in /etc/nsswitch.conf means that both short names and FQDNs can be obtained without any DNS lookups.

If you choose to not include the FQDN in the /etc/hosts file, you must add the domain name into the /etc/resolv.conf file in order for DNS to work properly in your environment.

Verifying your name lookup and DNS settings
Test your name lookup and DNS settings to make sure you get the expected output.

Use various hostname commands and verify the expected output. For example, from the spluba01.mgmt.corp.local node:
$ hostname
spluba01
$ hostname -s
spluba01
$ hostname --fqdn
spluba01.mgmt.corp.local
Use the ping <short name> command from each Splunk UBA node to all other Splunk UBA nodes and verify that all nodes can be reached.
Use the ping <FQDN> command from each Splunk UBA node to all other Splunk UBA nodes and verify that all nodes can be reached.
Supported web browsers
Open Splunk UBA in the latest versions of any of the following web browsers. Splunk UBA does not support other web browsers, such as Internet Explorer.

Mozilla Firefox
Google Chrome
Apple Safari
Supported single sign-on identity providers
Splunk UBA supports single sign-on integration with the following identity providers:

Ping Identity
Okta
Microsoft ADFS
OneLogin
See Configure authentication using single sign-on in Administer Splunk User Behavior Analytics.

Requirements for connecting to and getting data from the Splunk platform
To send data from Splunk platform to Splunk UBA, you must have Splunk platform version 6.3.x or later installed and a properly configured user account.

Requirements for the Splunk Enterprise user account
Verify that you have a Splunk Enterprise user account with:

Capabilities to perform real-time search, perform REST API calls, and access to the data. The admin role in Splunk Enterprise has the required capabilities by default. If you use a different role, you need the rt_search, edit_forwarders, list_forwarders, and edit_uba_settings capabilities. Add these capabilities to a role in Splunk Web. See Add and edit roles with Splunk Web in Securing Splunk Enterprise.
Configure the search job limits for the Splunk Enterprise user account and role so that they are twice the number of maximum allowed data sources for your deployment.
Size of cluster	Max number of data sources	User-level concurrent search job limit	User-level concurrent real-time search job limit	Role-level concurrent search job limit	Role-level concurrent real-time search job limit
1 node	6	12	12	12	12
3 nodes	10	20	20	20	20
5 nodes	12	24	24	24	24
7 nodes	24	48	48	48	48
10 nodes	32	64	64	64	64
20 nodes	64	128	128	128	128
Configure the Splunk Enterprise user account to have sufficient disk usage quota (for example, 40GB).
Send data to and receive data from Splunk Enterprise Security
To send and receive data from Splunk Enterprise Security, you must have the Splunk Add-on for Splunk UBA installed and enabled on your search head with the ueba index deployed to your indexers.

Verify the version compatibility among the products in the table.

Splunk Add-on for Splunk UBA	Splunk Enterprise Security	Splunk UBA
2.0.0	5.x, 6.0.1, 6.0.2	4.2.x, 4.3.x
3.0.0	6.1.0 and higher	5.x
3.1.0	6.3.0 and higher	5.x
See the Splunk products version compatibility matrix in the Splunk Products Version Compatibility Matrix manual for more information about compatibility among Splunk products.

Splunk Cloud customers must contact Splunk Support to fully integrate with Splunk UBA. The Splunk Cloud admin role cannot perform Splunk UBA setup.

Send data from Splunk Enterprise directly to Kafka in Splunk UBA
Use the Splunk UBA Kafka Ingestion App to send data from large data sets in Splunk Enterprise directly to Kafka in Splunk UBA. Sending data directly to Kafka offloads the processing task from the search heads to the indexers. See Requirements for Kafka data ingestion in the Splunk UBA Kafka Ingestion App manual.

Monitor Splunk UBA directly from Splunk Enterprise
Use the Splunk UBA Monitoring App to monitor the health of Splunk UBA and investigate Splunk UBA issues directly from Splunk Enterprise. See Splunk UBA Monitoring app requirements in the Splunk UBA Monitoring App manual.

Installing Splunk UBA in environments with no Internet access
Some environments require Splunk UBA to be installed without access to the Internet. In such cases, the functionality of Splunk UBA will be limited in the following areas:

Splunk UBA pages that normally show visual geographical location information about a device will show warnings that the Google Maps API cannot be reached. Perform the following tasks to disable Splunk UBA from using geographical location and displaying the warning:
In Splunk UBA, select Manage > Settings.
Select Geo Location.
Deselect the checkbox in the Show Geo Maps field.
Click OK.
Clicking the Learn more link on any Splunk UBA page will open a new tab with a link to quickdraw.splunk.com. This is the URL used to generate the correct help link to the Splunk UBA documentation.


Check system status before and after installation
Before and after you install Splunk UBA, check the system status with the uba_pre_check.sh shell script. The uba_pre_check.sh script is stored in the /opt/caspida/bin/utils directory of Splunk UBA. Log in as the caspida user on the management server using SSH to run the script.

Output from the script is saved in a plain text file in the /var/log/caspida/check/ directory with a file name that includes the host name of the server and the time stamp.

Run the script before setting up Splunk UBA
Before you setup Splunk UBA and run the Caspida setup command, use the script to verify that your system meets the system requirements for Splunk UBA. See System requirements for Splunk UBA.

To run the script in a single-node deployment, use the following command and replace node1 with the actual host name or IP address of your Splunk UBA node:

/opt/caspida/bin/utils/uba_pre_check.sh node1
To run the script in a distributed deployment, specify the host names or IP addresses of the nodes separated by spaces. For example, in a 3-node deployment:

/opt/caspida/bin/utils/uba_pre_check.sh node1 node2 node3
The script checks the status of the following characteristics:

The server meets the minimum server requirements.
A supported Linux distribution and version is installed on the server.
Required third-party software is installed.
Networking requirements are met.
Second disk is properly provisioned.
You might see errors related to file-based configurations. Those configurations happen after setup, so you can ignore those errors when running the script before setting up Splunk UBA.

Run the script before upgrading Splunk UBA
Before you upgrade Splunk UBA, run the script to make sure that your Splunk UBA system is running normally. Do not specify any Splunk UBA host names or IP addresses when running the script prior to an upgrade:

/opt/caspida/bin/utils/uba_pre_check.sh
Run the script before configuring data sources
Before you add data sources to Splunk UBA, run the script again to verify that the software is working correctly and is properly configured. See Configure Splunk UBA for required and optional configurations.

The script checks the status of the following configurations:

Admin users are correctly identified and normalized.
Email is set up to send alerts, changes made for the geolocation on the UI, internal domains /etc/caspida/local/conf/uba-site.properties file.
Internal IPs are set up /etc/caspida/local/conf/etl/configuration/EntityValidations.json file.
Competitive domains are set up in the /etc/caspida/local/conf/competitorDomains.txt file.
Verify network access to Google Maps, VirusTotal, WHOIS, MaxMind external services.
Run the script after adding data sources
You can run the script after adding data to verify that the system is up and running. Additional exceptions noted by the script indicate custom configuration steps or other issues that need remediation.


## Install Splunk UBA for the First Time

## Upgrade from an earlier release of Splunk UBA

## Configure Splunk UBA

## Troubleshoot your Splunk UBA Installation